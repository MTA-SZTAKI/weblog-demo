<?xml version="1.0" encoding="UTF-8"?>
<process xmlns="urn:hu.sztaki.ilab.longneck:1.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="urn:hu.sztaki.ilab.longneck:1.0 file:/home/lbendig/projects/longneck/longneck-lookup/src/main/resources/META-INF/schema/longneck-lookup.xsd">

  <source>
    <database-source connection-name="webstg_local">
      <query>          
        select server_host as "serverHost", 
               to_char(request_time,'YYYY.MM.DD HH24:MI:SS') as "requestTime", 
               event_group as "eventGroup", event as "event",
               visitor_referer_id as "visitorRefererId", visitor_cookie_id as "visitorCookieId", visitor_ip as "ipAddress", 
               inet_protocol as "inetProtocol", http_method as "httpMethod", http_status_code as "httpStatusCode", 
               http_request as "httpRequest", http_request_cookie as "httpRequestCookie", http_response_cookie as "httpResponseCookie", 
               request_url as "requestUrl", request_url_parameter as "requestUrlParameter", request_url_extension as "requestUrlExtension", 
               referer_url as "refererUrl", referer_url_parameter as "refererUrlParameter", referer_url_extension as "refererUrlExtension",
               agent_string as "agentString", auth_user as "authUser", bytes_sent as "bytesSent"
        from weblog_event_incoming_p2 s          
      </query>
    </database-source>
  </source>

  <target>
    <database-target connection-name="webstg_local">
      <truncate-query>
          truncate table weblog_event_incoming
      </truncate-query>
      
      <insert-query>
        insert into weblog_event_incoming (
            job_id, server_host, server_owner, request_timestamp, event_group, event, 
            visitor_referer_id, visitor_cookie_id, visitor_user_id, 
            visitor_ip, visitor_hostname, visitor_ip_resolv_time, 
            visitor_ip_resolv_expire, 
            visitor_ip_internal, 
            visitor_asn_code, visitor_asn_name, visitor_country_code, visitor_country_name, visitor_region, 
            visitor_city, visitor_postal_code, visitor_area_code,
            inet_protocol, http_method, http_status_code, 
            http_request, http_request_cookie, http_response_cookie, 
            request_url, request_url_parameter, request_url_extension,  
            referer_url, referer_url_parameter, referer_url_extension, 
            agent_string, agent_resolv_time, agent_type, agent_device, agent_processor, agent_sw_platform, agent_name, 
            agent_version, agent_language, agent_os, agent_os_version, agent_os_distro, agent_layout_engine, agent_layout_resolution,
            campaign_name, campaign_source, campaign_medium, campaign_term, campaign_content, 
            auth_user, bytes_sent
        ) values (
            -1, :serverHost, null, to_timestamp(:requestTime, 'YYYY.MM.DD HH24:MI:SS'), :eventGroup, :event,             
            :visitorRefererId, :visitorCookieId, :visitorUserId, 
            :ipAddress, :domainName, CURRENT_TIMESTAMP,             
            to_timestamp_tz(:lookupExpiry,'YYYY-MM-DD HH24:MI:SS FFTZH:TZM', 'NLS_DATE_LANGUAGE= AMERICAN'),
            :visitorIpInternal,
            null, null, null, null, null, 
            null, null, null,
            :inetProtocol, :httpMethod, :httpStatusCode, 
            :httpRequest, :httpRequestCookie, :httpResponseCookie, 
            :requestUrl, :requestUrlParameter, :requestUrlExtension,  
            :refererUrl, :refererUrlParameter, :refererUrlExtension,  
            :agentString, CURRENT_TIMESTAMP, :userAgentAgentType, :userAgentDevice, :userAgentProcessor, :userAgentSWPlatform, :userAgentAgentName, 
            :userAgentAgentVersion, :userAgentLang, :userAgentOS, :userAgentOSVersion, :userAgentOSDistro, :userAgentLayoutEngine, :userAgentLayoutRes,
            :utm_campaign, :utm_source, :utm_medium, :utm_term, :utm_content, 
            :authUser, to_number(decode(:bytesSent,'-','0',null,'0',:bytesSent))
        )
      </insert-query>
    </database-target> 
  </target>

  <error-target>
    <database-target connection-name="webstg_local">
      <truncate-query>   
        truncate table weblog_event_incoming_err
      </truncate-query>
      <insert-query>
       insert into weblog_event_incoming_err ( 
           error_time, server_host, request_timestamp, class_name, field, field_value, 
           details, document_url, document_line, document_column
       ) values (
          current_timestamp, :serverHost, to_timestamp(:requestTime, 'YYYY.MM.DD HH24:MI:SS'), 
          :class_name, :field, :value, :details, :document_url, :document_line, :document_column
       )
      </insert-query>
    </database-target>
  </error-target>

  <blocks>  
      
    <!-- set timeInMillis for userid extension -->
    <datetime-to-milliseconds apply-to="timeInMillis" from="requestTime" pattern="yyyy.MM.dd HH:mm:ss"/>
    
    <!-- Check if host belongs to Aegon global web proxy -->
    <block-ref id="visitor-internal-ip:visitor-internal-ip.aegon" version="1.0" >
      <map from="ipAddress" to="visitorIpAddress"/>
      <pass fields="visitorIpInternal"/>
    </block-ref>
    
    <!-- Reverse DNS lookup -->
    <!--dnsresolve apply-to="visitorIp" domain-field-name="visitorHostname" exp-field-name="visitorIpResolvExpire" /-->
    <if>
      <not>
        <match apply-to="visitorIpInternal" regexp="Y"/>
      </not>
      
      <then>
        <!--TODO: not possible?: map from="visitorIp" to="ipAddress" /-->
        <dnsresolve connection-name="dnsCache"/>
      </then>        
    </if>
    
    <!-- Set global (valid between sites) user id -->
    <block-ref id="userid:assign.visitoruserid" version="1"/>
    
    <!-- Add prefix to visitor ids -->
    <!-- easy way of surviving loss of userid memory (berkeleydb): 
         increase the following prefix if the userid database is dropped and rebuilt -->
    <set apply-to="$dbprefix" value="1-"/>
    <if>
      <not-null apply-to="visitorUserId" />
      <then>
        <implode apply-to="visitorUserId" sources="$dbprefix visitorUserId" glue=""/>
      </then>
    </if>
    <if>
      <not-null apply-to="visitorCookieId" />
      <then>
        <implode apply-to="visitorCookieId" sources="$dbprefix visitorCookieId" glue=""/>
      </then>
    </if>
    <if>
      <not-null apply-to="visitorRefererId" />
      <then>
        <implode apply-to="visitorRefererId" sources="$dbprefix visitorRefererId" glue=""/>
      </then>
    </if>
    
    <!-- Identify parts of user agent string -->
    <block-ref id="weblog-useragent:weblog-useragent.identify.parts" version="1.0">
      <map from="agentString" to="userAgent"/>
      <pass fields="userAgentAgentName userAgentAgentType userAgentAgentVersion userAgentLang userAgentOS 
                    userAgentOSVersion userAgentOSDistro userAgentLayoutEngine userAgentLayoutRes userAgentDevice 
                    userAgentProcessor userAgentSWPlatform"/>        
    </block-ref>
    
    <block-ref id="web-marketing-campaign:extract.params" version="1.0" />
    
        
  </blocks>

</process>
