<?xml version="1.0" encoding="UTF-8"?>
<process xmlns="urn:hu.sztaki.ilab.longneck:1.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">

  <source>
    <database-source connection-name="weblog_demo">
      <query>
        select 
          bytes_sent as "bytesSent"
          , request_prot_type as "requestProtType"
          , user_agent as "userAgent"
          , response_cookie as "responseCookie"
          --, "IDENTITY" as "identity"
          , "identity" as "identity"
          --, "TIME" as "time"
          , "time" as "time"
          , request_prot_method as "requestProtMethod"
          , request as "request"
          , domain as "domain"
          , host as "host"
          , status as "status"
          , request_url_extension as "requestUrlExtension"
          , request_url as "requestUrl"
          , request_url_url_param as "requestUrlUrlParam"
          , request_url_normalized as "requestUrlNormalized"
          , request_cookie as "requestCookie"
          , referer as "referer"
          , referer_url_param as "refererUrlParam"
          , referer_normalized as "refererNormalized"
          --, "USER" as "user"
          , "user" as "user"
          , apache_cookie as "apacheCookie"
          , google_cookie as "googleCookie"
          , time_in_millis as "timeInMillis"
          , ip_and_user_agent_hash as "ipAndUserAgentHash"
          , visitor_referer_id as "visitorRefererId"
          , visitor_cookie_id as "visitorCookieId"        
        from longneck_lbendig.tmp_userid_pass2
      </query>
    </database-source>
  </source>

  <target>
    <database-target connection-name="weblog_demo">
      <truncate-query>
          delete from longneck_lbendig.weblog_event_incoming
      </truncate-query>
      
      <insert-query>
        insert into longneck_lbendig.weblog_event_incoming (
        server_host
       ,request_timestamp
       ,event
       ,event_step
       ,visitor_referer_id
       ,visitor_cookie_id
       ,visitor_user_id
       ,client_id
       ,client_hostname
       ,client_resolv_time
       ,client_resolv_expiration
       ,client_internal
       ,protocol
       ,http_method
       ,http_status_code
       ,http_request
       ,request_url
       ,request_url_normalized
       ,request_url_parameter
       ,request_url_extension
       ,referer_url
       ,referer_url_normalized
       ,referer_url_parameter
       ,referer_url_extension
       ,agent_string
       ,agent_resolv_time
       ,agent_type
       ,agent_device
       ,agent_processor
       ,agent_sw_platform
       ,agent_name
       ,agent_version
       ,agent_language
       ,agent_os
       ,agent_os_version
       ,agent_os_distro
       ,agent_layout_engine
       ,agent_layout_resolution
       ,campaign_name
       ,campaign_source
       ,campaign_medium
       ,campaign_term
       ,campaign_content
       ,auth_user
       ,bytes_sent
       )values (
        :domain
       ,cast (:time, as timestamp)
       ,:webeventType
       ,:webeventStep
       ,cast (:visitorRefererId as numeric)
       ,cast (:visitorCookieId as numeric)
       ,cast (:visitorUserId as numeric)
       ,:host
       ,:resolvedHostDomain
       ,CURRENT_TIMESTAMP
       ,cast (:resolvedHostLookupExpDate as timestamp)
       ,:client_internal
       ,:requestProtType
       ,:requestProtMethod
       , case when :status = '-' then 0 else cast(:status as numeric) end
       ,:request
       ,:requestUrl
       ,:requestUrlNormalized
       ,:requestUrlUrlParam
       ,:requestUrlExtension
       ,:referer
       ,:refererNormalized
       ,:refererUrlParam
       ,:refererExtension
       ,:userAgent
       ,CURRENT_TIMESTAMP
       ,:userAgentAgentType
       ,:userAgentDevice
       ,:userAgentProcessor
       ,:userAgentSWPlatform
       ,:userAgentAgentName
       ,:userAgentAgentVersion
       ,:userAgentLang
       ,:userAgentOS
       ,:userAgentOSVersion
       ,:userAgentOSDistro
       ,:userAgentLayoutEngine
       ,:userAgentLayoutRes
       ,:utm_campaign
       ,:utm_source
       ,:utm_medium
       ,:utm_term
       ,:utm_content
       ,:user
       , case when :bytesSent = '-' then 0 else cast (:bytesSent as numeric) end
       )
      </insert-query>
  
    </database-target>
 
 <!--   
      <csv-target delimiter=";" empty-value=""
        columns="
        host=host,  
        user=user,
        identity=identity,
        resolvedHostDomain=resolvedHostDomain, 
        resolvedHostLookupExpDate=resolvedHostLookupExpDate,
        domain=domain,
        time=time,
        requestUrl=requestUrl,
        requestUrlExt=requestUrlExtension,
        requestUrlParam=requestUrlUrlParam,
        requestProtMethod=requestProtMethod,
        requestProtType=requestProtType,
        status=status,
        bytesSent=bytesSent,
        referer=referer,
        refererUrlExt=refererExtension,
        refererUrlParam=refererUrlParam,
        userAgent=userAgent,
        userAgentSWPlatform=userAgentSWPlatform,
        userAgentOS=userAgentOS,
        userAgentOSVersion=userAgentOSVersion,
        userAgentLang=userAgentLang,
        userAgentLayoutEngine=userAgentLayoutEngine,
        userAgentOSDistro=userAgentOSDistro,
        userAgentDevice=userAgentDevice,
        userAgentLayoutRes=userAgentLayoutRes,
        userAgentProcessor=userAgentProcessor,
        userAgentAgentName=userAgentAgentName,
        userAgentAgentVersion=userAgentAgentVersion,
        userAgentAgentType=userAgentAgentType,
        requestCookie=requestCookie,
        event=webeventType,
        eventStep=webeventStep,
        campaign_name=utm_campaign,
        source=utm_source,
        medium=utm_medium,
        term=utm_term,
        content=utm_content
        "
        target="csv_out.csv" />
-->
  </target>

  <error-target>
    <database-target connection-name="weblog_demo">
      <truncate-query>   
        delete from longneck_lbendig.weblog_event_incoming_err
      </truncate-query>
      <insert-query>
       insert into longneck_lbendig.weblog_event_incoming_err (
        field
       ,field_value
       ,details
       ,server_host
       ,request_timestamp
       ,document_url
       ,document_line
       ,document_column
       )values (
        :field
       ,:value
       ,:details
       ,:domain
       --,to_timestamp_tz(:time,'DD/MONTH/YYYY:HH24:MI:SS FFTZH:TZM','NLS_DATE_LANGUAGE= AMERICAN')
       ,:time
       ,:document_url
       ,:document_line
       ,:document_column
       )
      </insert-query>
    </database-target>
  </error-target>

  <blocks>  
    <!-- Reverse DNS lookup -->
    <dnsresolve apply-to="host" domain-field-name="resolvedHostDomain" exp-field-name="resolvedHostLookupExpDate" />
    
    <!-- Check if host belongs to Aegon global web proxy -->
    <block-ref id="weblog-aegonclient:weblog-aegonclient.client.type" version="1.0" />
    
    <!-- Set user id -->
    <block-ref id="userid:assign.visitoruserid" version="1"/>    
    
    <!-- Identify parts of user agent string -->
    <block-ref id="weblog-useragent:weblog-useragent.identify.parts" version="1.0" />
      
    <!-- Determine pageview events -->
    <!-- Event having (3XX, 4XX, 5XX) status codes are categorized (redirect, error, error), respectively -->
    <switch>
      <case>
        <check summary="">
          <match apply-to="status" regexp="2\d{2}"/>
        </check>
        <!--  Extract campaign parameters from requestUrls -->
        <block-ref id="weblog-campaign:weblog-campaign.extract.params" version="1.0" />
        <!-- Identify events -->
        <block-ref id="weblog-events:weblog-events.init.events" version="1.0" />
        <block-ref id="weblog-events:weblog-events.clone.event" version="1.0" />
        <block-ref id="weblog-events:weblog-events.identify.event" version="1.0" />
      </case>
      <case>
        <check summary="">
          <match apply-to="status" regexp="3\d{2}"/>
        </check>
        <set apply-to="webeventType" value="redirect"/>
      </case>
      <case>
        <check summary="">
          <match apply-to="status" regexp="[45]\d{2}"/>
        </check>
        <set apply-to="webeventType" value="error"/>
      </case>
      <case>
        <set apply-to="webeventType" value="UNKNOWN"/>
      </case>
    </switch>
       
  </blocks>

</process>
